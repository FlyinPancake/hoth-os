on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *" # At 04:00 UTC every day
name: Build and Push hoth-os Container Image
env:
  ALMALINUX_VERSION: 10
  IMAGE_NAME: ghcr.io/flyinpancake/hoth-os

permissions:
  contents: read
  packages: write

concurrency:
  group: build-and-push-hoth-os
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint CI and Containerfile
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Lint Containerfile with hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Containerfile

  build_bootc:
    needs: [lint]
    runs-on: ubuntu-24.04-arm
    name: Build Bootc Image
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ env.ALMALINUX_VERSION }},enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=pr
            type=sha

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Image
        if: steps.meta.outputs.tags != ''
        shell: bash
        run: |
          set -Eeuo pipefail

          # Build with all generated tags and labels
          mapfile -t TAGS < <(printf '%s\n' "${{ steps.meta.outputs.tags }}")
          mapfile -t LABELS < <(printf '%s\n' "${{ steps.meta.outputs.labels }}")

          BUILD_ARGS=()
          for tag in "${TAGS[@]}"; do
            [[ -n "$tag" ]] && BUILD_ARGS+=( -t "$tag" )
          done

          LABEL_ARGS=()
          for label in "${LABELS[@]}"; do
            [[ -n "$label" ]] && LABEL_ARGS+=( --label "$label" )
          done

          echo "Building image with tags:"
          printf '  %s\n' "${TAGS[@]}"

          podman build "${BUILD_ARGS[@]}" "${LABEL_ARGS[@]}" .

          echo "Pushing tags:"
          for tag in "${TAGS[@]}"; do
            podman push "$tag"
          done
