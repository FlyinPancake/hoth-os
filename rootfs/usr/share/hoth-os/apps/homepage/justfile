set shell := ["bash", "-Eeuo", "pipefail", "-c"]

install:
    #!/usr/bin/env bash
    set -Eeuo pipefail

    gum style --border rounded --padding "1 2" --border-foreground 212 "Homepage Setup Wizard"
    echo

    WEB_PORT=$(gum input --placeholder "8090" --prompt "Web UI port: " --value "8090")
    echo "Web UI port: $WEB_PORT"

    HOSTNAME=$(hostname)
    echo "Hostname: $HOSTNAME"
    echo

    gum confirm "Install Homepage with these settings?" || exit 0
    echo

    CONFIG_PATH="/etc/homepage"

    echo "Creating config directory..."
    sudo mkdir -p "$CONFIG_PATH"

    echo "Copying default configs..."
    sudo cp /usr/share/hoth-os/apps/homepage/config/*.yaml "$CONFIG_PATH/"

    sudo sed -i "s/__HOSTNAME__/$HOSTNAME/g" "$CONFIG_PATH/services.yaml"

    TAILSCALE_DEVICEID=$(tailscale status --json | jq -r '.Self.ID')
    sudo sed -i "s/__TAILSCALE_DEVICEID__/$TAILSCALE_DEVICEID/g" "$CONFIG_PATH/services.yaml"

    echo "Update your Tailscale API Access Token in $CONFIG_PATH/services.yaml"

    sudo chown -R $(id -u):$(id -g) "$CONFIG_PATH"

    QUADLET_DIR="$HOME/.config/containers/systemd"
    mkdir -p "$QUADLET_DIR"

    echo "Installing quadlet..."
    sed \
        -e "s|PublishPort=8090:3000|PublishPort=$WEB_PORT:3000|" \
        -e "s|PUID=1000|PUID=$(id -u)|" \
        -e "s|PGID=1000|PGID=$(id -g)|" \
        /usr/share/hoth-os/quadlets/homepage.container \
        > "$QUADLET_DIR/homepage.container"

    loginctl enable-linger $(whoami)

    echo "Starting service..."
    systemctl --user daemon-reload
    systemctl --user start homepage.service
    echo

    gum style --foreground 212 "✓ Homepage installed successfully!"
    gum style --faint "Web UI: http://localhost:$WEB_PORT"
    gum style --faint "Config: $CONFIG_PATH"
    gum style --faint "Edit services.yaml to add more apps!"

uninstall:
    #!/usr/bin/env bash
    set -Eeuo pipefail

    gum confirm --default=false "Uninstall Homepage? (config will be preserved)" || exit 0

    systemctl --user stop homepage.service 2>/dev/null || true
    rm -f "$HOME/.config/containers/systemd/homepage.container"
    systemctl --user daemon-reload

    gum style --foreground 212 "✓ Homepage uninstalled"

status:
    @systemctl --user status homepage.service

logs follow="":
    #!/usr/bin/env bash
    if [[ "{{ follow }}" == "follow" || "{{ follow }}" == "f" ]]; then
        journalctl --user -u homepage.service -f
    else
        journalctl --user -u homepage.service -n 50
    fi

add-service config_file:
    #!/usr/bin/env bash
    set -Eeuo pipefail

    CONFIG_PATH="/etc/homepage"
    if [[ ! -d "$CONFIG_PATH" ]]; then
        gum style --foreground 196 "Error: Homepage not installed. Run 'hjust homepage install' first."
        exit 1
    fi

    if [[ ! -f "{{ config_file }}" ]]; then
        gum style --foreground 196 "Error: Config file not found: {{ config_file }}"
        exit 1
    fi

    source "{{ config_file }}"

    HOSTNAME=$(hostname)

    YAML_CONTENT=$(echo "$YAML_CONTENT" | sed "s/__HOSTNAME__/$HOSTNAME/g")

    for var in $(env | grep '^__' | cut -d= -f1); do
        value="${!var}"
        YAML_CONTENT=$(echo "$YAML_CONTENT" | sed "s|$var|$value|g")
    done

    if grep -q "$SERVICE_NAME:" "$CONFIG_PATH/services.yaml"; then
        gum style --foreground 196 "$SERVICE_NAME already configured in services.yaml"
        exit 1
    fi

    echo "$YAML_CONTENT" | sudo tee -a "$CONFIG_PATH/services.yaml" > /dev/null

    systemctl --user restart homepage.service 2>/dev/null || true

    gum style --foreground 212 "✓ $SERVICE_NAME added to Homepage!"

remove-service:
    #!/usr/bin/env bash
    set -Eeuo pipefail

    CONFIG_PATH="/etc/homepage"
    if [[ ! -d "$CONFIG_PATH" ]]; then
        gum style --foreground 196 "Error: Homepage not installed. Run 'hjust homepage install' first."
        exit 1
    fi

    services=$(yq eval '.[] | keys' "$CONFIG_PATH/services.yaml" | sed 's/- //g')
    if [[ -z "$services" ]]; then
        gum style --foreground 196 "No services configured in services.yaml"
        exit 1
    fi

    service_name=$(echo "$services" | gum choose --header "Select a service to remove")


    if ! grep -q "^- $service_name:" "$CONFIG_PATH/services.yaml"; then
        gum style --foreground 196 "Error: $service_name not found in services.yaml"
        exit 1
    fi

    gum confirm --default=false "Remove $service_name from Homepage?" || exit 0

    gum style --foreground 212 "Removing $service_name from Homepage..."

    sudo yq eval "del(.[].[\"$service_name\"]) | del(.[] | select(length == 0))" -i "$CONFIG_PATH/services.yaml"

    systemctl --user restart homepage.service 2>/dev/null || true

    gum style --foreground 212 "✓ $service_name removed from Homepage!"
